{"version":3,"sources":["Constants.ts","User.ts","Workbench.ts","components/Board.ts","math/Rectangle.ts","components/RaspberryPi.ts","components/Hat.ts","components/LedDisplay.ts","components/Buzzer.ts","Util.ts","components/LedLight.ts","components/Button.ts","components/Sensor.ts","tools/ColorPicker.ts","components/RainbowHat.ts","tools/LineChart.ts","System.ts","ComponentsPanel.ts","RainbowHatContextMenu.ts","WorkbenchContextMenu.ts","LineChartContextMenu.ts","RaspberryPiContextMenu.ts","ColorPickerContextMenu.ts","code/Block.ts","math/Point.ts","code/Codespace.ts","code/Code.ts","Main.ts"],"names":[],"mappings":"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","file":"Main.8e83dfcd.js","sourceRoot":"..","sourcesContent":["/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport const Software = {\r\n  name: <string>'IoT Workbench',\r\n  abbreviation: <string>'IW',\r\n  version: <string>'0.0.1'\r\n}\r\n\r\n\r\nexport const Font = {\r\n  label: <string>'9px Arial',\r\n  normal: <string>'10px Arial',\r\n  axisName: <string>'12px Arial',\r\n  highlight: <string>'14px Arial'\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Person} from \"./Person\";\r\n\r\nexport class User implements Person {\r\n\r\n  public fullName: string;\r\n\r\n  constructor(public firstName: string, public middleInitial: string, public lastName: string) {\r\n    if (middleInitial) {\r\n      this.fullName = firstName + \" \" + middleInitial + \" \" + lastName;\r\n    } else {\r\n      this.fullName = firstName + \" \" + lastName;\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class Workbench {\r\n\r\n  readonly canvas: HTMLCanvasElement;\r\n\r\n  private gridSize: number = 20;\r\n\r\n  constructor(canvasId: string) {\r\n    this.canvas = document.getElementById(canvasId) as HTMLCanvasElement;\r\n    this.canvas.addEventListener(\"mousedown\", this.mouseDown.bind(this), false);\r\n    this.canvas.addEventListener(\"mouseup\", this.mouseUp.bind(this), false);\r\n    this.canvas.addEventListener(\"mousemove\", this.mouseMove.bind(this), false);\r\n    this.canvas.addEventListener('contextmenu', this.openContextMenu.bind(this), false);\r\n  }\r\n\r\n  public draw(): void {\r\n    let context = this.canvas.getContext('2d');\r\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.drawGrid(context);\r\n  }\r\n\r\n  public drawGrid(context: CanvasRenderingContext2D): void {\r\n    context.beginPath();\r\n    context.strokeStyle = \"LightSkyBlue\";\r\n    for (let i = 1; i <= this.canvas.height / this.gridSize; i++) {\r\n      context.moveTo(0, i * this.gridSize);\r\n      context.lineTo(this.canvas.width, i * this.gridSize);\r\n    }\r\n    for (let i = 1; i <= this.canvas.width / this.gridSize; i++) {\r\n      context.moveTo(i * this.gridSize, 0);\r\n      context.lineTo(i * this.gridSize, this.canvas.height);\r\n    }\r\n    context.stroke();\r\n    context.closePath();\r\n    context.restore();\r\n  }\r\n\r\n  // detect if (x, y) is inside this workbench\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.canvas.offsetLeft && x < this.canvas.offsetLeft + this.canvas.width && y > this.canvas.offsetTop && y < this.canvas.offsetTop + this.canvas.height;\r\n  }\r\n\r\n  public getX(): number {\r\n    return 10;\r\n  }\r\n\r\n  public getY(): number {\r\n    return 10;\r\n  }\r\n\r\n  public getWidth(): number {\r\n    return this.canvas.width;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  private mouseDown(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n  }\r\n\r\n  private mouseUp(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  private mouseMove(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  private openContextMenu(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let menu = document.getElementById(\"workbench-context-menu\") as HTMLMenuElement;\r\n    menu.style.left = e.clientX + \"px\";\r\n    menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n    menu.classList.add(\"show-menu\");\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Movable} from \"../Movable\";\r\nimport {Rectangle} from \"../math/Rectangle\";\r\n\r\nexport abstract class Board implements Movable {\r\n\r\n  readonly canvas: HTMLCanvasElement;\r\n  public handles: Rectangle[] = [];\r\n  uid: string;\r\n\r\n  constructor(canvasId: string) {\r\n    this.canvas = document.getElementById(canvasId) as HTMLCanvasElement;\r\n  }\r\n\r\n  public getUid(): string {\r\n    return this.uid;\r\n  }\r\n\r\n  public getX(): number {\r\n    return this.canvas.offsetLeft;\r\n  }\r\n\r\n  public setX(x: number): void {\r\n    this.canvas.style.left = x + \"px\";\r\n  }\r\n\r\n  public getY(): number {\r\n    return this.canvas.offsetTop;\r\n  }\r\n\r\n  public setY(y: number): void {\r\n    this.canvas.style.top = y + \"px\";\r\n  }\r\n\r\n  public getWidth(): number {\r\n    return this.canvas.width;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  public abstract draw(): void;\r\n\r\n  // detect if (x, y) is inside this board\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.canvas.offsetLeft && x < this.canvas.offsetLeft + this.canvas.width && y > this.canvas.offsetTop && y < this.canvas.offsetTop + this.canvas.height;\r\n  }\r\n\r\n  abstract drawToolTips(): void;\r\n\r\n  abstract updateFirebase(value): void;\r\n\r\n  abstract updateFromFirebase(): void;\r\n\r\n  whichHandle(x: number, y: number): number {\r\n    for (let i = 0; i < this.handles.length; i++) {\r\n      if (this.handles[i].contains(x, y)) return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  drawHandle(handle: Rectangle, context: CanvasRenderingContext2D): void {\r\n    context.strokeStyle = \"yellow\";\r\n    context.beginPath();\r\n    context.rect(handle.x, handle.y, handle.width, handle.height);\r\n    context.stroke();\r\n    context.closePath();\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class Rectangle {\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n\r\n  constructor(x: number, y: number, width: number, height: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public getXmax(): number {\r\n    return this.x + this.width;\r\n  }\r\n\r\n  public getYmax(): number {\r\n    return this.y + this.height;\r\n  }\r\n\r\n  public getXmin(): number {\r\n    return this.x;\r\n  }\r\n\r\n  public getYmin(): number {\r\n    return this.y;\r\n  }\r\n\r\n  public getCenterX(): number {\r\n    return this.x + this.width / 2;\r\n  }\r\n\r\n  public getCenterY(): number {\r\n    return this.y + this.height / 2;\r\n  }\r\n\r\n  public contains(px: number, py: number): boolean {\r\n    return px > this.x && px < this.x + this.width && py > this.y && py < this.y + this.height;\r\n  }\r\n\r\n  public intersectRect(r: Rectangle): boolean {\r\n    return !(r.x > this.getXmax() || r.getXmax() < this.x || r.y > this.getYmax() || r.getYmax() < this.y);\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"[\" + this.x + \", \" + this.y + \", \" + this.width + \", \" + this.height + \"]\";\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Hat} from \"./Hat\";\r\nimport {Board} from \"./Board\";\r\nimport {Rectangle} from \"../math/Rectangle\";\r\nimport {system} from \"../Main\"; // this is needed as we use augmented methods of canvas defined in Main.ts\r\n\r\n// @ts-ignore\r\nimport raspberryPiImage from \"../img/raspberry-pi.png\";\r\n\r\nexport class RaspberryPi extends Board {\r\n\r\n  hat: Hat;\r\n\r\n  private boardImage: HTMLImageElement;\r\n  private mouseOverObject: any;\r\n\r\n  constructor(canvasId: string) {\r\n    super(canvasId);\r\n\r\n    this.uid = \"Raspberry Pi\";\r\n    this.canvas.addEventListener(\"mousedown\", this.mouseDown, false);\r\n    this.canvas.addEventListener(\"mouseup\", this.mouseUp, false);\r\n    this.canvas.addEventListener(\"mousemove\", this.mouseMove, false);\r\n    this.canvas.addEventListener('contextmenu', this.openContextMenu, false);\r\n\r\n    this.handles.push(new Rectangle(5, 5, 30, 30));\r\n    this.handles.push(new Rectangle(395, 5, 30, 30));\r\n    this.handles.push(new Rectangle(395, 245, 30, 30));\r\n    this.handles.push(new Rectangle(5, 245, 30, 30));\r\n\r\n    this.boardImage = new Image();\r\n    this.boardImage.src = raspberryPiImage;\r\n    this.setX(20);\r\n    this.setY(20);\r\n\r\n    this.updateFromFirebase();\r\n  }\r\n\r\n  public draw(): void {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    ctx.save();\r\n    ctx.shadowOffsetX = 10;\r\n    ctx.shadowOffsetY = 10;\r\n    ctx.shadowColor = \"rgb(96, 96, 96)\";\r\n    ctx.shadowBlur = 10;\r\n    ctx.drawImage(this.boardImage, 0, 0);\r\n    ctx.restore();\r\n    this.drawToolTips();\r\n  }\r\n\r\n  private openContextMenu = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let menu = document.getElementById(\"raspberry-pi-context-menu\") as HTMLMenuElement;\r\n    menu.style.left = e.clientX + \"px\";\r\n    menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n    menu.classList.add(\"show-menu\");\r\n  };\r\n\r\n  private mouseDown = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  private mouseUp = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  private mouseMove = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    if (this.handles[0].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[0];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[1].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[1];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[2].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[2];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[3].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[3];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else {\r\n      this.mouseOverObject = null;\r\n      this.canvas.style.cursor = \"default\";\r\n    }\r\n    this.draw();\r\n  };\r\n\r\n  drawToolTips(): void {\r\n    let context = this.canvas.getContext('2d');\r\n    let x = 0;\r\n    let y = -25;\r\n    if (this.mouseOverObject == this.handles[0]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[0].getXmax() + 20;\r\n      y += this.handles[0].getYmax() + 30;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Upper-left handle', true);\r\n    } else if (this.mouseOverObject == this.handles[1]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[1].getXmin() - 30;\r\n      y += this.handles[1].getYmax() + 30;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Upper-right handle', true);\r\n    } else if (this.mouseOverObject == this.handles[2]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[2].getXmin() - 30;\r\n      y += this.handles[2].getYmin() - 5;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Lower-right handle', true);\r\n    } else if (this.mouseOverObject == this.handles[3]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[3].getXmax() + 20;\r\n      y += this.handles[3].getYmin() - 5;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Lower-left handle', true);\r\n    }\r\n  }\r\n\r\n  updateFirebase(value): void {\r\n    // TODO\r\n  }\r\n\r\n  updateFromFirebase(): void {\r\n    // TODO\r\n  }\r\n\r\n}\r\n","/*\n * Hardware attached on top (HAT)\n *\n * @author Charles Xie\n */\n\nimport {Board} from \"./Board\";\nimport {RaspberryPi} from \"./RaspberryPi\";\n\nexport abstract class Hat extends Board {\n\n  public raspberryPi: RaspberryPi;\n\n  public attach(raspberryPi: RaspberryPi): void {\n    if (raspberryPi != null) {\n      raspberryPi.hat = this;\n    } else {\n      if (this.raspberryPi != null) {\n        this.raspberryPi.hat = null;\n      }\n    }\n    this.raspberryPi = raspberryPi;\n  }\n\n}\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Board} from \"./Board\";\r\nimport {ElectronicComponent} from \"./ElectronicComponent\";\r\n\r\nexport class LedDisplay implements ElectronicComponent {\r\n\r\n  name: string;\r\n  color: string = \"lightgreen\";\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  fontSize: string = \"70px\";\r\n\r\n  private character: string;\r\n  private readonly board: Board;\r\n  private readonly fontFamily: string = \"digital-clock-font\";\r\n\r\n  constructor(board: Board, name: string, x: number, y: number, width: number, height: number) {\r\n    this.board = board;\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    ctx.save();\r\n    if (this.character) {\r\n      ctx.fillStyle = \"lightgreen\";\r\n      ctx.font = this.fontSize + \" \" + this.fontFamily;\r\n      ctx.fillText(this.character, this.x, this.y);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  public setCharacter(character: string): void {\r\n    if (character != null && character.length != 1) throw \"Only one character is allowed\";\r\n    this.character = character;\r\n  }\r\n\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Board} from \"./Board\";\r\nimport {ElectronicComponent} from \"./ElectronicComponent\";\r\nimport {system} from \"../Main\";\r\n\r\nexport class Buzzer implements ElectronicComponent {\r\n\r\n  name: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  on: boolean;\r\n\r\n  private readonly board: Board;\r\n  private audioContext: AudioContext;\r\n\r\n  constructor(board: Board, name: string, x: number, y: number, width: number, height: number) {\r\n    this.board = board;\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    ctx.save();\r\n    if (this.on) {\r\n      ctx.lineWidth = 3;\r\n      ctx.strokeStyle = \"white\";\r\n      let centerX = this.x + this.width / 2;\r\n      let centerY = this.y + this.height / 2;\r\n      let angle = 0.25 * Math.PI;\r\n      for (let i = 0; i < 4; i++) {\r\n        let r = 5 + i * 5;\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, r, -angle, angle);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, r, Math.PI - angle, Math.PI + angle);\r\n        ctx.stroke();\r\n      }\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\r\n  }\r\n\r\n  public beepButton(button: string): void {\r\n    switch (button) {\r\n      case \"A\":\r\n        this.beep(1, 800, 200);\r\n        break;\r\n      case \"B\":\r\n        this.beep(1, 400, 200);\r\n        break;\r\n      case \"C\":\r\n        this.beep(1, 200, 200);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public beep(volume: number, frequency: number, duration: number): void {\r\n    this.on = true;\r\n    if (this.audioContext == null) this.audioContext = new AudioContext();\r\n    let v = this.audioContext.createOscillator();\r\n    let u = this.audioContext.createGain();\r\n    v.connect(u);\r\n    v.frequency.value = frequency;\r\n    v.type = \"square\";\r\n    u.connect(this.audioContext.destination);\r\n    u.gain.value = volume * 0.01;\r\n    v.start(this.audioContext.currentTime);\r\n    v.stop(this.audioContext.currentTime + duration * 0.001);\r\n    let that = this;\r\n    setTimeout(function () {\r\n      that.on = false;\r\n      system.rainbowHat.draw();\r\n    }, 200);\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\nexport class Util {\r\n\r\n  static countDigits(x: number): number {\r\n    return x.toString().length;\r\n  }\r\n\r\n  static adjust(color: string, amount: number): string {\r\n    return '#' + color.replace(/^#/, '').replace(/../g, color => ('0' + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\r\n  }\r\n\r\n  static hexToRgb(hex: string): any {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n\r\n  static rgbToHex(r: number, g: number, b: number): string {\r\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n  }\r\n\r\n  static rgbToHue(r: number, g: number, b: number): number {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var c = max - min;\r\n    var hue;\r\n    if (c == 0) {\r\n      hue = 0;\r\n    } else {\r\n      switch (max) {\r\n        case r:\r\n          var segment = (g - b) / c;\r\n          var shift = 0 / 60;       // R° / (360° / hex sides)\r\n          if (segment < 0) {        // hue > 180, full rotation\r\n            shift = 360 / 60;       // R° / (360° / hex sides)\r\n          }\r\n          hue = segment + shift;\r\n          break;\r\n        case g:\r\n          var segment = (b - r) / c;\r\n          var shift = 120 / 60;     // G° / (360° / hex sides)\r\n          hue = segment + shift;\r\n          break;\r\n        case b:\r\n          var segment = (r - g) / c;\r\n          var shift = 240 / 60;     // B° / (360° / hex sides)\r\n          hue = segment + shift;\r\n          break;\r\n      }\r\n    }\r\n    return hue * 60; // hue is in [0,6], scale it up\r\n  }\r\n\r\n  static rgbToHsl(r: number, g: number, b: number): any {\r\n    let r1 = r / 255;\r\n    let g1 = g / 255;\r\n    let b1 = b / 255;\r\n    let maxColor = Math.max(r1, g1, b1);\r\n    let minColor = Math.min(r1, g1, b1);\r\n    let lightness = (maxColor + minColor) / 2;\r\n    let saturation = 0;\r\n    let hue = 0;\r\n    if (maxColor != minColor) {\r\n      if (lightness < 0.5) {\r\n        saturation = (maxColor - minColor) / (maxColor + minColor);\r\n      } else {\r\n        saturation = (maxColor - minColor) / (2 - maxColor - minColor);\r\n      }\r\n      if (r1 == maxColor) {\r\n        hue = (g1 - b1) / (maxColor - minColor);\r\n      } else if (g1 == maxColor) {\r\n        hue = 2.0 + (b1 - r1) / (maxColor - minColor);\r\n      } else {\r\n        hue = 4.0 + (r1 - g1) / (maxColor - minColor);\r\n      }\r\n    }\r\n    lightness = lightness * 100;\r\n    saturation = saturation * 100;\r\n    hue = hue * 60;\r\n    if (hue < 0) {\r\n      hue += 360;\r\n    }\r\n    return {h: hue, s: saturation, l: lightness};\r\n  }\r\n\r\n  /*\r\n   * Converts an HSL color value to RGB. Conversion formula\r\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n   * Assumes h, s, and l are contained in the set [0, 1] and\r\n   * returns r, g, and b in the set [0, 255].\r\n   *\r\n   * @param   {number}  h       The hue\r\n   * @param   {number}  s       The saturation\r\n   * @param   {number}  l       The lightness\r\n   * @return  {Array}           The RGB representation\r\n   */\r\n  static hslToRgb(h: number, s: number, l: number): any {\r\n    let r, g, b;\r\n    if (s == 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      let hue2rgb = function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      };\r\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      let p = 2 * l - q;\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255)};\r\n  }\r\n\r\n  static getHueColor(color: string): string {\r\n    let c = Util.hexToRgb(color);\r\n    c = Util.hslToRgb(Util.rgbToHue(c.r, c.g, c.b) / 360, 0.5, 0.5);\r\n    return Util.rgbToHex(c.r, c.g, c.b);\r\n  }\r\n\r\n  // expects 0 <= h, s, v <= 1\r\n  static hsvToRgb(h: number, s: number, v: number): any {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n      case 0:\r\n        r = v, g = t, b = p;\r\n        break;\r\n      case 1:\r\n        r = q, g = v, b = p;\r\n        break;\r\n      case 2:\r\n        r = p, g = v, b = t;\r\n        break;\r\n      case 3:\r\n        r = p, g = q, b = v;\r\n        break;\r\n      case 4:\r\n        r = t, g = p, b = v;\r\n        break;\r\n      case 5:\r\n        r = v, g = p, b = q;\r\n        break;\r\n    }\r\n    return {\r\n      r: Math.round(r * 255),\r\n      g: Math.round(g * 255),\r\n      b: Math.round(b * 255)\r\n    };\r\n  }\r\n\r\n  // output 0 <= h, s, v <= 1\r\n  static rgbToHsv(r: number, g: number, b: number): any {\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let d = max - min;\r\n    let h;\r\n    let s = (max === 0 ? 0 : d / max);\r\n    let v = max / 255;\r\n    switch (max) {\r\n      case min:\r\n        h = 0;\r\n        break;\r\n      case r:\r\n        h = (g - b) + d * (g < b ? 6 : 0);\r\n        h /= 6 * d;\r\n        break;\r\n      case g:\r\n        h = (b - r) + d * 2;\r\n        h /= 6 * d;\r\n        break;\r\n      case b:\r\n        h = (r - g) + d * 4;\r\n        h /= 6 * d;\r\n        break;\r\n    }\r\n    return {h: h, s: s, v: v};\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Board} from \"./Board\";\r\nimport {Util} from \"../Util\";\r\nimport {ElectronicComponent} from \"./ElectronicComponent\";\r\n\r\nexport class LedLight implements ElectronicComponent {\r\n\r\n  name: string;\r\n  color: string = \"#ff0000\";\r\n  radius: number = 4;\r\n  rays: number = 8;\r\n  rayLength: number = 5;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  on: boolean = false;\r\n\r\n  private readonly board: Board;\r\n\r\n  constructor(board: Board, name: string, color: string, radius: number, rays: number, rayLength: number, x: number, y: number, width: number, height: number) {\r\n    this.board = board;\r\n    this.name = name;\r\n    this.color = color;\r\n    this.radius = radius;\r\n    this.rays = rays;\r\n    this.rayLength = rayLength;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    ctx.save();\r\n    if (this.on) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 1;\r\n      let centerX = this.x + this.width / 2;\r\n      let centerY = this.y + this.height / 2;\r\n      if (this.radius < 8) {\r\n        let x1, y1, x2, y2;\r\n        let angle, cos, sin;\r\n        ctx.strokeStyle = \"white\";\r\n        for (let i = 0; i < this.rays; i++) {\r\n          angle = i * Math.PI * 2 / this.rays;\r\n          cos = Math.cos(angle);\r\n          sin = Math.sin(angle);\r\n          x1 = centerX + this.radius * cos * 2 / 3;\r\n          y1 = centerY + this.radius * sin * 2 / 3;\r\n          x2 = centerX + (this.radius + this.rayLength) * cos;\r\n          y2 = centerY + (this.radius + this.rayLength) * sin;\r\n          ctx.beginPath();\r\n          ctx.moveTo(x1, y1);\r\n          ctx.lineTo(x2, y2);\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n        }\r\n        ctx.fillStyle = this.color;\r\n      } else {\r\n        let gradient = ctx.createRadialGradient(centerX, centerY, 0, centerX, centerY, this.radius);\r\n        gradient.addColorStop(1, \"rgba(255, 255, 255, 0)\");\r\n        gradient.addColorStop(0.5, Util.adjust(this.color, -100));\r\n        gradient.addColorStop(0, Util.adjust(this.color, 100));\r\n        ctx.fillStyle = gradient;\r\n      }\r\n      ctx.arc(centerX, centerY, this.radius, 0, Math.PI * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    } else {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeStyle = this.color;\r\n      ctx.arc(this.x + this.width / 2, this.y + this.height / 2, this.radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\r\n  }\r\n\r\n  public toggle(x: number, y: number): boolean {\r\n    let inside = this.contains(x, y);\r\n    if (inside) {\r\n      this.on = !this.on;\r\n    }\r\n    return inside;\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Board} from \"./Board\";\r\nimport {ElectronicComponent} from \"./ElectronicComponent\";\r\n\r\nexport class Button implements ElectronicComponent {\r\n\r\n  name: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  on: boolean = false;\r\n\r\n  private readonly board: Board;\r\n  private pressedColor: string = '#66cccccc';\r\n\r\n  constructor(board: Board, name: string, x: number, y: number, width: number, height: number) {\r\n    this.board = board;\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.on) {\r\n      ctx.fillStyle = this.pressedColor;\r\n      ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    }\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = 'black';\r\n    ctx.rect(this.x, this.y, this.width, this.height);\r\n    ctx.stroke();\r\n  }\r\n\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Board} from \"./Board\";\r\n\r\nexport class Sensor {\r\n\r\n  readonly name: string;\r\n  readonly unit: string;\r\n  readonly data: number[] = [];\r\n  collectionInterval: number = 1; // in seconds\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n\r\n  private readonly board: Board;\r\n  private on: boolean = false;\r\n  private pressedColor: string = 'white';\r\n\r\n  constructor(board: Board, name: string, unit: string, x: number, y: number, width: number, height: number) {\r\n    this.board = board;\r\n    this.name = name;\r\n    this.unit = unit;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.on) {\r\n      ctx.fillStyle = this.pressedColor;\r\n      ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    }\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = 'black';\r\n    ctx.rect(this.x, this.y, this.width, this.height);\r\n    ctx.stroke();\r\n  }\r\n\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Util} from \"../Util\";\r\n\r\nexport class ColorPicker {\r\n\r\n  private rgbaColor: string = \"#ffffffff\";\r\n  private colorLabel: HTMLElement;\r\n  private colorCode: HTMLInputElement;\r\n  private colorBlock: HTMLCanvasElement;\r\n  private colorStrip: HTMLCanvasElement; // this draws the hue of the color\r\n  private ctx1: CanvasRenderingContext2D;\r\n  private ctx2: CanvasRenderingContext2D;\r\n  private savedBlockX: number = -10;\r\n  private savedBlockY: number = -10;\r\n  private savedStripY: number = -10;\r\n\r\n  constructor() {\r\n    this.colorBlock = document.getElementById('color-block') as HTMLCanvasElement;\r\n    this.ctx1 = this.colorBlock.getContext('2d');\r\n    this.colorStrip = document.getElementById('color-strip') as HTMLCanvasElement;\r\n    this.ctx2 = this.colorStrip.getContext('2d');\r\n    this.colorBlock.addEventListener(\"mousedown\", this.mouseDownBlock.bind(this), false);\r\n    this.colorBlock.addEventListener(\"mouseup\", this.mouseUpBlock.bind(this), false);\r\n    this.colorStrip.addEventListener(\"click\", this.mouseClickStrip.bind(this), false);\r\n    this.colorStrip.addEventListener(\"mousedown\", this.mouseDownStrip.bind(this), false);\r\n    this.colorStrip.addEventListener(\"mouseup\", this.mouseUpStrip.bind(this), false);\r\n  }\r\n\r\n  public setColorLabel(colorLabel: HTMLElement) {\r\n    this.colorLabel = colorLabel;\r\n  }\r\n\r\n  public setColorCode(colorCode: HTMLInputElement) {\r\n    this.colorCode = colorCode;\r\n  }\r\n\r\n  public setSelectedColor(color: string): void {\r\n    this.rgbaColor = color;\r\n    let c = Util.hexToRgb(color);\r\n    this.savedStripY = this.colorStrip.height * Util.rgbToHue(c.r, c.g, c.b) / 360;\r\n    if (this.colorLabel) {\r\n      this.colorLabel.style.backgroundColor = color;\r\n    }\r\n    if (this.colorCode) {\r\n      this.colorCode.value = color;\r\n      this.colorCode.select();\r\n    }\r\n  }\r\n\r\n  // TODO: the position should be calculated by inverting the dual-axis shading used in fillGradient()\r\n  // right now, we just use a brute-force method to search for the point that maps to the selected color\r\n  public setSelectedPoint(): void {\r\n    let c = Util.hexToRgb(this.rgbaColor);\r\n    let imageData = this.ctx1.getImageData(0, 0, this.colorBlock.width, this.colorBlock.height).data;\r\n    let n = imageData.length / 4;\r\n    for (let i = 0; i < n; i++) {\r\n      if (imageData[4 * i] == c.r && imageData[4 * i + 1] == c.g && imageData[4 * i + 2] == c.b) {\r\n        this.savedBlockX = i % this.colorBlock.width;\r\n        this.savedBlockY = i / this.colorBlock.width;\r\n        this.draw();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getSelectedColor(): string {\r\n    return this.rgbaColor;\r\n  }\r\n\r\n  public draw(): void {\r\n    // draw color block\r\n    this.ctx1.clearRect(0, 0, this.colorBlock.width, this.colorBlock.height);\r\n    this.ctx1.rect(0, 0, this.colorBlock.width, this.colorBlock.height);\r\n    this.fillGradient();\r\n    this.ctx1.strokeStyle = \"white\";\r\n    this.ctx1.lineWidth = 2;\r\n    this.ctx1.beginPath();\r\n    this.ctx1.arc(this.savedBlockX, this.savedBlockY, 6, 0, 2 * Math.PI);\r\n    this.ctx1.stroke();\r\n    // draw color strip\r\n    this.ctx2.clearRect(0, 0, this.colorStrip.width, this.colorStrip.height);\r\n    this.ctx2.rect(0, 0, this.colorStrip.width, this.colorStrip.height);\r\n    let gradient = this.ctx2.createLinearGradient(0, 0, 0, this.colorStrip.height);\r\n    gradient.addColorStop(0, '#ff0000');\r\n    gradient.addColorStop(1.0 / 6.0, '#ffff00');\r\n    gradient.addColorStop(2.0 / 6.0, '#00ff00');\r\n    gradient.addColorStop(3.0 / 6.0, '#00ffff');\r\n    gradient.addColorStop(4.0 / 6.0, '#0000ff');\r\n    gradient.addColorStop(5.0 / 6.0, '#ff00ff');\r\n    gradient.addColorStop(1, '#ff0000');\r\n    this.ctx2.fillStyle = gradient;\r\n    this.ctx2.fill();\r\n    this.ctx2.fillStyle = \"white\";\r\n    this.ctx2.beginPath();\r\n    this.ctx2.rect(0, this.savedStripY, this.colorStrip.width, 6);\r\n    this.ctx2.fill();\r\n    this.ctx2.strokeStyle = \"black\";\r\n    this.ctx2.lineWidth = 2;\r\n    this.ctx2.beginPath();\r\n    this.ctx2.rect(0, this.savedStripY, this.colorStrip.width, 8);\r\n    this.ctx2.stroke();\r\n  }\r\n\r\n  private fillGradient(): void {\r\n    this.ctx1.fillStyle = Util.getHueColor(this.rgbaColor);\r\n    this.ctx1.fillRect(0, 0, this.colorBlock.width, this.colorBlock.height);\r\n    let grdWhite = this.ctx1.createLinearGradient(0, 0, this.colorBlock.width, 0);\r\n    grdWhite.addColorStop(0, 'rgba(255, 255, 255, 1)');\r\n    grdWhite.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n    this.ctx1.fillStyle = grdWhite;\r\n    this.ctx1.fillRect(0, 0, this.colorBlock.width, this.colorBlock.height);\r\n    let grdBlack = this.ctx1.createLinearGradient(0, 0, 0, this.colorBlock.height);\r\n    grdBlack.addColorStop(0, 'rgba(0, 0, 0, 0)');\r\n    grdBlack.addColorStop(1, 'rgba(0, 0, 0, 1)');\r\n    this.ctx1.fillStyle = grdBlack;\r\n    this.ctx1.fillRect(0, 0, this.colorBlock.width, this.colorBlock.height);\r\n  }\r\n\r\n  private mouseDownStrip(e: MouseEvent): void {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private mouseUpStrip(e: MouseEvent): void {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private mouseClickStrip(e: MouseEvent): void {\r\n    this.savedStripY = e.offsetY;\r\n    let imageData = this.ctx2.getImageData(e.offsetX, e.offsetY, 1, 1).data;\r\n    this.rgbaColor = Util.rgbToHex(imageData[0], imageData[1], imageData[2]);\r\n    this.draw();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private mouseDownBlock(e: MouseEvent): void {\r\n    this.changeColor(e);\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private mouseUpBlock(e: MouseEvent): void {\r\n    this.savedBlockX = e.offsetX;\r\n    this.savedBlockY = e.offsetY;\r\n    this.draw();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  private changeColor(e: MouseEvent): void {\r\n    let imageData = this.ctx1.getImageData(e.offsetX, e.offsetY, 1, 1).data;\r\n    this.rgbaColor = Util.rgbToHex(imageData[0], imageData[1], imageData[2]);\r\n    if (this.colorLabel) {\r\n      this.colorLabel.style.backgroundColor = this.rgbaColor;\r\n    }\r\n    if (this.colorCode) {\r\n      this.colorCode.value = this.rgbaColor;\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Hat} from \"./Hat\";\r\nimport {RaspberryPi} from \"./RaspberryPi\";\r\nimport {LedDisplay} from \"./LedDisplay\";\r\nimport {Buzzer} from \"./Buzzer\";\r\nimport {LedLight} from \"./LedLight\";\r\nimport {Button} from \"./Button\";\r\nimport {Sensor} from \"./Sensor\";\r\nimport {System} from \"../System\";\r\nimport {system} from \"../Main\";\r\nimport {Util} from \"../Util\";\r\nimport {Rectangle} from \"../math/Rectangle\";\r\nimport {ColorPicker} from \"../tools/ColorPicker\";\r\n\r\n// @ts-ignore\r\nimport rainbowHatImage from \"../img/rainbow-hat.png\";\r\n\r\nexport class RainbowHat extends Hat {\r\n\r\n  public redLedLight: LedLight;\r\n  public greenLedLight: LedLight;\r\n  public blueLedLight: LedLight;\r\n  public buttonA: Button;\r\n  public buttonB: Button;\r\n  public buttonC: Button;\r\n  public buzzer: Buzzer;\r\n  public temperatureSensor: Sensor;\r\n  public barometricPressureSensor: Sensor;\r\n  public rgbLedLights: LedLight[] = [];\r\n  public alphanumericDisplays: LedDisplay[] = [];\r\n  public decimalPointDisplays: LedDisplay[] = [];\r\n\r\n  indexOfSelectedRgbLedLight: number = -1;\r\n  private stateId: string = \"rainbow_hat_default\";\r\n  private mouseOverObject: any;\r\n  private boardImage: HTMLImageElement;\r\n\r\n  constructor(canvasId: string) {\r\n    super(canvasId);\r\n\r\n    this.uid = \"Rainbow HAT\";\r\n    this.canvas.addEventListener(\"mousedown\", this.mouseDown, false);\r\n    this.canvas.addEventListener(\"mouseup\", this.mouseUp, false);\r\n    this.canvas.addEventListener(\"mousemove\", this.mouseMove, false);\r\n    this.canvas.addEventListener('contextmenu', this.openContextMenu, false);\r\n\r\n    this.redLedLight = new LedLight(this, \"LED Light\", \"red\", 4, 8, 10, 65, 233, 18, 8);\r\n    this.greenLedLight = new LedLight(this, \"LED Light\", \"green\", 4, 8, 10, 147, 233, 18, 8);\r\n    this.blueLedLight = new LedLight(this, \"LED Light\", \"blue\", 4, 8, 10, 230, 233, 18, 8);\r\n    this.buttonA = new Button(this, \"Button A\", 38, 245, 72, 24);\r\n    this.buttonB = new Button(this, \"Button B\", 120, 245, 72, 24);\r\n    this.buttonC = new Button(this, \"Button C\", 203, 245, 72, 24);\r\n    this.buzzer = new Buzzer(this, \"Piezo Buzzer\", 35, 170, 20, 20);\r\n    this.temperatureSensor = new Sensor(this, \"Temperature\", \"°C\", 152, 108, 12, 12);\r\n    this.barometricPressureSensor = new Sensor(this, \"Pressure\", \"hPa\", 187, 115, 20, 10);\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 251, 78, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 218, 62, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 183, 53, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 147, 50, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 111, 53, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 76, 62, 20, 20));\r\n    this.rgbLedLights.push(new LedLight(this, \"RGB LED Light\", \"black\", 16, 12, 2, 44, 78, 20, 20));\r\n    this.alphanumericDisplays.push(new LedDisplay(this, \"LED Display\", 34, 214, 33, 65));\r\n    this.alphanumericDisplays.push(new LedDisplay(this, \"LED Display\", 95, 214, 33, 65));\r\n    this.alphanumericDisplays.push(new LedDisplay(this, \"LED Display\", 156, 214, 33, 65));\r\n    this.alphanumericDisplays.push(new LedDisplay(this, \"LED Display\", 218, 214, 33, 65));\r\n    this.decimalPointDisplays.push(new LedDisplay(this, \"LED Display\", 78, 214, 33, 65));\r\n    this.decimalPointDisplays.push(new LedDisplay(this, \"LED Display\", 139, 214, 33, 65));\r\n    this.decimalPointDisplays.push(new LedDisplay(this, \"LED Display\", 200, 214, 33, 65));\r\n    this.decimalPointDisplays.push(new LedDisplay(this, \"LED Display\", 261, 214, 33, 65));\r\n    for (let i = 0; i < this.decimalPointDisplays.length; i++) {\r\n      this.decimalPointDisplays[i].fontSize = \"40px\";\r\n    }\r\n\r\n    this.handles.push(new Rectangle(5, 5, 30, 30));\r\n    this.handles.push(new Rectangle(290, 5, 30, 30));\r\n    this.handles.push(new Rectangle(290, 250, 30, 30));\r\n    this.handles.push(new Rectangle(5, 250, 30, 30));\r\n\r\n    this.boardImage = new Image();\r\n    this.boardImage.src = rainbowHatImage;\r\n    this.setY(20);\r\n\r\n    this.updateFromFirebase();\r\n  }\r\n\r\n  public setSelectedRgbLedLightColor(color: string) {\r\n    if (this.indexOfSelectedRgbLedLight >= 0) {\r\n      this.rgbLedLights[this.indexOfSelectedRgbLedLight].color = color;\r\n      this.draw();\r\n      let list = [];\r\n      for (let i = 0; i < this.rgbLedLights.length; i++) {\r\n        let a = [];\r\n        let c = Util.hexToRgb(this.rgbLedLights[i].color);\r\n        a.push(c.r);\r\n        a.push(c.g);\r\n        a.push(c.b);\r\n        list.push(a);\r\n      }\r\n      this.updateFirebase({rainbowRgb: list});\r\n    }\r\n  }\r\n\r\n  public draw(): void {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    ctx.save();\r\n    ctx.shadowOffsetX = 8;\r\n    ctx.shadowOffsetY = 8;\r\n    ctx.shadowColor = \"rgb(96, 96, 96)\";\r\n    ctx.shadowBlur = 8;\r\n    ctx.drawImage(this.boardImage, 0, 0);\r\n    ctx.restore();\r\n    this.redLedLight.draw(ctx);\r\n    this.greenLedLight.draw(ctx);\r\n    this.blueLedLight.draw(ctx);\r\n    this.buttonA.draw(ctx);\r\n    this.buttonB.draw(ctx);\r\n    this.buttonC.draw(ctx);\r\n    this.buzzer.draw(ctx);\r\n    this.temperatureSensor.draw(ctx);\r\n    this.barometricPressureSensor.draw(ctx);\r\n    this.drawToolTips();\r\n    for (let i = 0; i < this.rgbLedLights.length; i++) {\r\n      this.rgbLedLights[i].draw(ctx);\r\n    }\r\n    for (let i = 0; i < this.alphanumericDisplays.length; i++) {\r\n      this.alphanumericDisplays[i].draw(ctx);\r\n    }\r\n    for (let i = 0; i < this.decimalPointDisplays.length; i++) {\r\n      this.decimalPointDisplays[i].draw(ctx);\r\n    }\r\n  }\r\n\r\n  public attach(raspberryPi: RaspberryPi): void {\r\n    super.attach(raspberryPi);\r\n    if (raspberryPi != null) {\r\n      this.setX(raspberryPi.getX());\r\n      this.setY(raspberryPi.getY());\r\n      localStorage.setItem(\"Attached: \" + this.getUid(), \"0\");\r\n    } else {\r\n      localStorage.setItem(\"Attached: \" + this.getUid(), \"-1\");\r\n    }\r\n  }\r\n\r\n  private openContextMenu = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    this.indexOfSelectedRgbLedLight = -1;\r\n    for (let i = 0; i < this.rgbLedLights.length; i++) {\r\n      if (this.rgbLedLights[i].contains(dx, dy)) {\r\n        this.indexOfSelectedRgbLedLight = i;\r\n        break;\r\n      }\r\n    }\r\n    if (this.indexOfSelectedRgbLedLight >= 0) {\r\n      let menu = document.getElementById(\"colorpicker-context-menu\") as HTMLMenuElement;\r\n      menu.style.left = e.clientX + \"px\";\r\n      menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n      menu.classList.add(\"show-menu\");\r\n      if (system.colorPicker == null) {\r\n        system.colorPicker = new ColorPicker();\r\n      }\r\n      system.colorPicker.setColorLabel(document.getElementById(\"colorpicker-label\"));\r\n      system.colorPicker.setColorCode(document.getElementById(\"colorpicker-hex-code\") as HTMLInputElement);\r\n      system.colorPicker.setSelectedColor(this.rgbLedLights[this.indexOfSelectedRgbLedLight].color);\r\n      system.colorPicker.draw();\r\n      system.colorPicker.setSelectedPoint();\r\n      document.getElementById(\"colorpicker-title\").innerText = \"RGB LED Light \" + this.indexOfSelectedRgbLedLight;\r\n    } else {\r\n      let menu = document.getElementById(\"rainbow-hat-context-menu\") as HTMLMenuElement;\r\n      menu.style.left = e.clientX + \"px\";\r\n      menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n      menu.classList.add(\"show-menu\");\r\n      let attachMenuItem = document.getElementById(\"rainbow-hat-attach-menu-item\") as HTMLElement;\r\n      let detachMenuItem = document.getElementById(\"rainbow-hat-detach-menu-item\") as HTMLElement;\r\n      if (this.raspberryPi != null) {\r\n        attachMenuItem.className = \"menu-item disabled\";\r\n        detachMenuItem.className = \"menu-item\";\r\n      } else {\r\n        let r1 = new Rectangle(this.getX(), this.getY(), this.getWidth(), this.getHeight());\r\n        let r2 = new Rectangle(system.raspberryPi.getX(), system.raspberryPi.getY(), system.raspberryPi.getWidth(), system.raspberryPi.getHeight());\r\n        let onTop = r1.intersectRect(r2);\r\n        attachMenuItem.className = onTop ? \"menu-item\" : \"menu-item disabled\";\r\n        detachMenuItem.className = \"menu-item disabled\";\r\n      }\r\n    }\r\n  };\r\n\r\n  private mouseDown = (e: MouseEvent): void => {\r\n\r\n    e.preventDefault();\r\n\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n\r\n    if (this.redLedLight.toggle(dx, dy)) {\r\n      this.updateFirebase({redLed: this.redLedLight.on});\r\n      this.redLedLight.draw(context);\r\n      return;\r\n    }\r\n\r\n    if (this.greenLedLight.toggle(dx, dy)) {\r\n      this.updateFirebase({greenLed: this.greenLedLight.on});\r\n      this.greenLedLight.draw(context);\r\n      return;\r\n    }\r\n\r\n    if (this.blueLedLight.toggle(dx, dy)) {\r\n      this.updateFirebase({blueLed: this.blueLedLight.on});\r\n      this.blueLedLight.draw(context);\r\n      return;\r\n    }\r\n\r\n    if (this.buttonA.contains(dx, dy)) {\r\n      this.buttonA.on = true;\r\n      this.buttonA.draw(context);\r\n      this.redLedLight.on = true;\r\n      this.redLedLight.draw(context);\r\n      this.updateFirebase({redLed: true});\r\n      this.buzzer.beepButton(\"A\");\r\n      return;\r\n    }\r\n\r\n    if (this.buttonB.contains(dx, dy)) {\r\n      this.buttonB.on = true;\r\n      this.buttonB.draw(context);\r\n      this.greenLedLight.on = true;\r\n      this.greenLedLight.draw(context);\r\n      this.updateFirebase({greenLed: true});\r\n      this.buzzer.beepButton(\"B\");\r\n      return;\r\n    }\r\n\r\n    if (this.buttonC.contains(dx, dy)) {\r\n      this.buttonC.on = true;\r\n      this.buttonC.draw(context);\r\n      this.blueLedLight.on = true;\r\n      this.blueLedLight.draw(context);\r\n      this.updateFirebase({blueLed: true});\r\n      this.buzzer.beepButton(\"C\");\r\n      return;\r\n    }\r\n\r\n  };\r\n\r\n  private mouseUp = (e: MouseEvent): void => {\r\n\r\n    e.preventDefault();\r\n\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n\r\n    if (this.buttonA.contains(dx, dy)) {\r\n      this.buttonA.on = false;\r\n      this.buttonA.draw(context);\r\n      this.redLedLight.on = false;\r\n      this.redLedLight.draw(context);\r\n      this.updateFirebase({redLed: false});\r\n      return;\r\n    }\r\n\r\n    if (this.buttonB.contains(dx, dy)) {\r\n      this.buttonB.on = false;\r\n      this.buttonB.draw(context);\r\n      this.greenLedLight.on = false;\r\n      this.greenLedLight.draw(context);\r\n      this.updateFirebase({greenLed: false});\r\n      return;\r\n    }\r\n\r\n    if (this.buttonC.contains(dx, dy)) {\r\n      this.buttonC.on = false;\r\n      this.buttonC.draw(context);\r\n      this.blueLedLight.on = false;\r\n      this.blueLedLight.draw(context);\r\n      this.updateFirebase({blueLed: false});\r\n      return;\r\n    }\r\n\r\n    if (this.temperatureSensor.contains(dx, dy)) {\r\n      system.temperatureGraph.setVisible(!system.temperatureGraph.isVisible());\r\n      if (system.temperatureGraph.isVisible()) {\r\n        system.temperatureGraph.draw();\r\n        system.temperatureGraph.bringForward();\r\n      }\r\n      localStorage.setItem(\"Visible: \" + system.temperatureGraph.getUid(), system.temperatureGraph.isVisible() ? \"true\" : \"false\");\r\n      return;\r\n    }\r\n\r\n    if (this.barometricPressureSensor.contains(dx, dy)) {\r\n      system.pressureGraph.setVisible(!system.pressureGraph.isVisible());\r\n      if (system.pressureGraph.isVisible()) {\r\n        system.pressureGraph.draw();\r\n        system.pressureGraph.bringForward();\r\n      }\r\n      localStorage.setItem(\"Visible: \" + system.pressureGraph.getUid(), system.pressureGraph.isVisible() ? \"true\" : \"false\");\r\n      return;\r\n    }\r\n\r\n  };\r\n\r\n  private mouseMove = (e: MouseEvent): void => {\r\n\r\n    e.preventDefault();\r\n\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n\r\n    if (this.redLedLight.contains(dx, dy)) {\r\n      this.mouseOverObject = this.redLedLight;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.greenLedLight.contains(dx, dy)) {\r\n      this.mouseOverObject = this.greenLedLight;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.blueLedLight.contains(dx, dy)) {\r\n      this.mouseOverObject = this.blueLedLight;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.buttonA.contains(dx, dy)) {\r\n      this.mouseOverObject = this.buttonA;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.buttonB.contains(dx, dy)) {\r\n      this.mouseOverObject = this.buttonB;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.buttonC.contains(dx, dy)) {\r\n      this.mouseOverObject = this.buttonC;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.temperatureSensor.contains(dx, dy)) {\r\n      this.mouseOverObject = this.temperatureSensor;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.barometricPressureSensor.contains(dx, dy)) {\r\n      this.mouseOverObject = this.barometricPressureSensor;\r\n      this.canvas.style.cursor = \"pointer\";\r\n    } else if (this.handles[0].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[0];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[1].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[1];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[2].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[2];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else if (this.handles[3].contains(dx, dy)) {\r\n      this.mouseOverObject = this.handles[3];\r\n      this.canvas.style.cursor = \"move\";\r\n    } else {\r\n      let onRgbLedLight = false;\r\n      for (let i = 0; i < this.rgbLedLights.length; i++) {\r\n        if (this.rgbLedLights[i].contains(dx, dy)) {\r\n          this.mouseOverObject = this.rgbLedLights[i];\r\n          this.canvas.style.cursor = \"pointer\";\r\n          onRgbLedLight = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!onRgbLedLight) {\r\n        this.mouseOverObject = null;\r\n        this.canvas.style.cursor = \"default\";\r\n      }\r\n    }\r\n    this.draw();\r\n\r\n  };\r\n\r\n  drawToolTips(): void {\r\n    let context = this.canvas.getContext('2d');\r\n    let x = 0;\r\n    let y = -25;\r\n    if (this.mouseOverObject == this.redLedLight) {\r\n      x += this.redLedLight.x + this.redLedLight.width / 2;\r\n      y += this.redLedLight.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Red LED light', true);\r\n    } else if (this.mouseOverObject == this.greenLedLight) {\r\n      x += this.greenLedLight.x + this.greenLedLight.width / 2;\r\n      y += this.greenLedLight.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Green LED light', true);\r\n    } else if (this.mouseOverObject == this.blueLedLight) {\r\n      x += this.blueLedLight.x + this.blueLedLight.width / 2;\r\n      y += this.blueLedLight.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Blue LED light', true);\r\n    } else if (this.mouseOverObject == this.buttonA) {\r\n      x += this.buttonA.x + this.buttonA.width / 2;\r\n      y += this.buttonA.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Button A', true);\r\n    } else if (this.mouseOverObject == this.buttonB) {\r\n      x += this.buttonB.x + this.buttonB.width / 2;\r\n      y += this.buttonB.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Button B', true);\r\n    } else if (this.mouseOverObject == this.buttonC) {\r\n      x += this.buttonC.x + this.buttonC.width / 2;\r\n      y += this.buttonC.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Button C', true);\r\n    } else if (this.mouseOverObject == this.temperatureSensor) {\r\n      x += this.temperatureSensor.x + this.temperatureSensor.width / 2;\r\n      y += this.temperatureSensor.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Temperature sensor', true);\r\n    } else if (this.mouseOverObject == this.barometricPressureSensor) {\r\n      x += this.barometricPressureSensor.x + this.barometricPressureSensor.width / 2;\r\n      y += this.barometricPressureSensor.y;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Barometric pressure sensor', true);\r\n    } else if (this.mouseOverObject == this.handles[0]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[0].getXmax() + 20;\r\n      y += this.handles[0].getYmax() + 30;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Upper-left handle', true);\r\n    } else if (this.mouseOverObject == this.handles[1]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[1].getXmin() - 30;\r\n      y += this.handles[1].getYmax() + 30;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Upper-right handle', true);\r\n    } else if (this.mouseOverObject == this.handles[2]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[2].getXmin() - 30;\r\n      y += this.handles[2].getYmin() - 5;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Lower-right handle', true);\r\n    } else if (this.mouseOverObject == this.handles[3]) {\r\n      this.drawHandle(this.mouseOverObject, context);\r\n      x += this.handles[3].getXmax() + 20;\r\n      y += this.handles[3].getYmin() - 5;\r\n      context.drawTooltip(x, y, 20, 8, 10, 'Lower-left handle', true);\r\n    }\r\n  }\r\n\r\n  updateFirebase(value): void {\r\n    System.database.ref(this.stateId).update(value);\r\n  }\r\n\r\n  // by default, sensors transmit data every second. This can be adjusted through Firebase.\r\n  updateFromFirebase(): void {\r\n    let that = this;\r\n    System.database.ref().on(\"value\", function (snapshot) {\r\n      snapshot.forEach(function (child) {\r\n        let childData = child.val();\r\n        that.redLedLight.on = childData.redLed;\r\n        that.greenLedLight.on = childData.greenLed;\r\n        that.blueLedLight.on = childData.blueLed;\r\n        if (that.redLedLight.on) {\r\n          that.buzzer.beepButton(\"A\");\r\n        }\r\n        if (that.greenLedLight.on) {\r\n          that.buzzer.beepButton(\"B\");\r\n        }\r\n        if (that.blueLedLight.on) {\r\n          that.buzzer.beepButton(\"C\");\r\n        }\r\n        if (childData.rainbowRgb) {\r\n          for (let i = 0; i < that.rgbLedLights.length; i++) {\r\n            let r = childData.rainbowRgb[i][0];\r\n            let g = childData.rainbowRgb[i][1];\r\n            let b = childData.rainbowRgb[i][2];\r\n            that.rgbLedLights[i].on = r > 0 || g > 0 || b > 0;\r\n            that.rgbLedLights[i].color = Util.rgbToHex(r, g, b);\r\n          }\r\n        }\r\n        if (childData.allowTemperatureTransmission) {\r\n          that.temperatureSensor.collectionInterval = childData.sensorDataCollectionInterval ? childData.sensorDataCollectionInterval * 0.001 : 1;\r\n          that.temperatureSensor.data.push(<number>childData.temperature);\r\n          system.temperatureGraph.draw();\r\n          let t: number = childData.temperature;\r\n          let s: string = t.toString();\r\n          let i: number = s.indexOf(\".\");\r\n          if (i > 0 && i < 4) {\r\n            that.decimalPointDisplays[i - 1].setCharacter(\".\");\r\n          }\r\n          let integerPart: string = s.substring(0, i);\r\n          let decimalPart: string = s.substring(i + 1);\r\n          s = (integerPart + decimalPart).substr(0, 4);\r\n          for (i = 0; i < 4; i++) {\r\n            that.alphanumericDisplays[i].setCharacter(s[i]);\r\n          }\r\n        }\r\n        if (childData.allowBarometricPressureTransmission) {\r\n          that.barometricPressureSensor.collectionInterval = childData.sensorDataCollectionInterval ? childData.sensorDataCollectionInterval * 0.001 : 1;\r\n          that.barometricPressureSensor.data.push(<number>childData.barometricPressure);\r\n          system.pressureGraph.draw();\r\n          let t: number = childData.barometricPressure;\r\n          let s: string = t.toString();\r\n          let i: number = s.indexOf(\".\");\r\n          if (i > 0 && i < 4) {\r\n            that.decimalPointDisplays[i - 1].setCharacter(\".\");\r\n          }\r\n          let integerPart: string = s.substring(0, i);\r\n          let decimalPart: string = s.substring(i + 1);\r\n          s = (integerPart + decimalPart).substr(0, 4);\r\n          for (i = 0; i < 4; i++) {\r\n            that.alphanumericDisplays[i].setCharacter(s[i]);\r\n          }\r\n        }\r\n        that.draw();\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","/*\r\n * This draws a line from the input sensor data stream (time series).\r\n *\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Sensor} from \"../components/Sensor\";\r\nimport {Movable} from \"../Movable\";\r\nimport {Util} from \"../Util\";\r\nimport {Rectangle} from \"../math/Rectangle\";\r\n\r\nexport class LineChart implements Movable {\r\n\r\n  name: string;\r\n  minimumValue: number = 0;\r\n  maximumValue: number = 1;\r\n  autoscale: boolean = true;\r\n  xAxisLabel: string = \"Time (s)\";\r\n  yAxisLabel: string = \"Temperature (°C)\";\r\n  graphWindowColor: string = \"white\";\r\n  titleBarColor: string = \"lightgray\";\r\n  handle: Rectangle;\r\n\r\n  private readonly canvas: HTMLCanvasElement;\r\n  private sensor: Sensor;\r\n  private visible: boolean;\r\n  private margin = {\r\n    left: <number>40,\r\n    right: <number>25,\r\n    top: <number>40,\r\n    bottom: <number>40\r\n  };\r\n  private readonly titleBarHeight = 24;\r\n  private closeButton = new Rectangle(0, 0, 14, 14);\r\n  private clearButton = new Rectangle(0, 0, 14, 14);\r\n  private selectedButton: Rectangle;\r\n  readonly uid: string;\r\n\r\n  constructor(elementId: string, sensor: Sensor) {\r\n    this.uid = sensor.name + \" graph\";\r\n    this.canvas = document.getElementById(elementId) as HTMLCanvasElement;\r\n    this.sensor = sensor;\r\n    this.yAxisLabel = sensor.name + \" (\" + sensor.unit + \")\";\r\n    this.handle = new Rectangle(0, 0, this.canvas.width, this.titleBarHeight);\r\n    this.closeButton.x = this.canvas.width - this.closeButton.width - 4;\r\n    this.closeButton.y += 4;\r\n    this.clearButton.x = this.canvas.width - 2 * (this.clearButton.width + 4);\r\n    this.clearButton.y += 4;\r\n  }\r\n\r\n  public getUid(): string {\r\n    return this.uid;\r\n  }\r\n\r\n  public setVisible(visible: boolean): void {\r\n    this.canvas.style.display = visible ? \"block\" : \"none\";\r\n    this.visible = visible;\r\n  }\r\n\r\n  public isVisible(): boolean {\r\n    return this.visible;\r\n  }\r\n\r\n  public onHandle(x: number, y: number): boolean {\r\n    return this.handle.contains(x, y);\r\n  }\r\n\r\n  public draw(): void {\r\n\r\n    this.canvas.addEventListener('click', this.onMouseClick, false);\r\n    this.canvas.addEventListener('dblclick', this.onMouseDoubleClick, false);\r\n    this.canvas.addEventListener('mousemove', this.onMouseMove, false);\r\n    this.canvas.addEventListener('mouseleave', this.onMouseLeave, false);\r\n    this.canvas.addEventListener('touchmove', this.onTouchMove, false);\r\n    this.canvas.addEventListener('contextmenu', this.openContextMenu, false);\r\n\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    if (this.sensor.data) {\r\n      this.drawGraphWindow(ctx);\r\n      this.drawAxisLabels(ctx);\r\n      if (this.sensor.data.length > 1) {\r\n        this.drawLineCharts(ctx);\r\n      }\r\n    }\r\n    this.drawTitleBar(ctx);\r\n    this.drawToolTips(ctx);\r\n\r\n  }\r\n\r\n  private drawLineCharts(ctx: CanvasRenderingContext2D): void {\r\n\r\n    // detect minimum and maximum of y values\r\n    let min = Number.MAX_VALUE;\r\n    let max = -min;\r\n    if (this.autoscale) {\r\n      for (let i = 0; i < this.sensor.data.length; i++) {\r\n        if (this.sensor.data[i] > max) {\r\n          max = this.sensor.data[i];\r\n        }\r\n        if (this.sensor.data[i] < min) {\r\n          min = this.sensor.data[i];\r\n        }\r\n      }\r\n    } else {\r\n      min = this.minimumValue;\r\n      max = this.maximumValue;\r\n    }\r\n\r\n    // determine the graph window\r\n    let graphWindowWidth = this.canvas.width - this.margin.left - this.margin.right;\r\n    let graphWindowHeight = this.canvas.height - this.margin.bottom - this.margin.top;\r\n    let dx = graphWindowWidth / (this.sensor.data.length - 1);\r\n    let yOffset = 0.1 * graphWindowHeight;\r\n    let dy = (graphWindowHeight - 2 * yOffset) / (max - min);\r\n\r\n    // draw the data line\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.font = \"10px Arial\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.beginPath();\r\n    let horizontalAxisY = this.canvas.height - this.margin.bottom;\r\n    let tmpX = this.margin.left;\r\n    let tmpY = yOffset + (this.sensor.data[0] - min) * dy;\r\n    ctx.moveTo(tmpX, horizontalAxisY - tmpY);\r\n    ctx.fillText(\"0\", tmpX - 4, horizontalAxisY + 10);\r\n    for (let i = 1; i < this.sensor.data.length; i++) {\r\n      tmpX = this.margin.left + dx * i;\r\n      tmpY = yOffset + (this.sensor.data[i] - min) * dy;\r\n      ctx.lineTo(tmpX, horizontalAxisY - tmpY);\r\n    }\r\n    ctx.stroke();\r\n\r\n    // draw symbols on top of the line\r\n    for (let i = 0; i < this.sensor.data.length; i++) {\r\n      tmpX = this.margin.left + dx * i;\r\n      tmpY = yOffset + (this.sensor.data[i] - min) * dy;\r\n      ctx.beginPath();\r\n      ctx.arc(tmpX, horizontalAxisY - tmpY, 3, 0, 2 * Math.PI);\r\n      ctx.closePath();\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fill();\r\n      ctx.fillStyle = \"black\";\r\n      ctx.stroke();\r\n    }\r\n\r\n    // draw x-axis tick marks\r\n    let timeLength = this.sensor.data.length * this.sensor.collectionInterval;\r\n    let spacing = Math.pow(10, Util.countDigits(Math.round(timeLength)) - 1);\r\n    for (let i = 0; i < this.sensor.data.length; i++) {\r\n      let j = i * this.sensor.collectionInterval;\r\n      if (Math.abs(j - Math.floor(j)) < 0.0001) { // only plot at whole seconds\r\n        if (j % spacing == 0 || timeLength < 10) {\r\n          tmpX = this.margin.left + dx * i;\r\n          ctx.beginPath();\r\n          ctx.moveTo(tmpX, horizontalAxisY);\r\n          ctx.lineTo(tmpX, horizontalAxisY - 4);\r\n          ctx.stroke();\r\n          ctx.fillText(j.toString(), tmpX - 4, horizontalAxisY + 10);\r\n        }\r\n      }\r\n    }\r\n\r\n    // draw y-axis tick marks\r\n    tmpY = yOffset;\r\n    let minString = min.toFixed(2);\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.margin.left, horizontalAxisY - tmpY);\r\n    ctx.lineTo(this.margin.left + 4, horizontalAxisY - tmpY);\r\n    ctx.stroke();\r\n    ctx.save();\r\n    ctx.translate(this.margin.left - 10, horizontalAxisY - tmpY + ctx.measureText(minString).width / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.fillText(minString, 0, 0);\r\n    ctx.restore();\r\n\r\n    tmpY = yOffset + (max - min) * dy;\r\n    let maxString = max.toFixed(2);\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.margin.left, horizontalAxisY - tmpY);\r\n    ctx.lineTo(this.margin.left + 4, horizontalAxisY - tmpY);\r\n    ctx.stroke();\r\n    ctx.save();\r\n    ctx.translate(this.margin.left - 10, horizontalAxisY - tmpY + ctx.measureText(maxString).width / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.fillText(maxString, 0, 0);\r\n    ctx.restore();\r\n\r\n  }\r\n\r\n  private drawAxisLabels(ctx: CanvasRenderingContext2D): void {\r\n    let graphWindowWidth = this.canvas.width - this.margin.left - this.margin.right;\r\n    let horizontalAxisY = this.canvas.height - this.margin.bottom;\r\n    ctx.font = \"15px Arial\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillText(this.xAxisLabel, this.margin.left + graphWindowWidth / 2 - ctx.measureText(this.xAxisLabel).width / 2, horizontalAxisY + 30);\r\n    ctx.save();\r\n    ctx.translate(20, this.canvas.height / 2 + ctx.measureText(this.yAxisLabel).width / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.fillText(this.yAxisLabel, 0, 0);\r\n    ctx.restore();\r\n  }\r\n\r\n  private drawGraphWindow(ctx: CanvasRenderingContext2D): void {\r\n    let canvas = this.canvas;\r\n    let margin = this.margin;\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.rect(margin.left, margin.top, canvas.width - margin.left - margin.right, canvas.height - margin.top - margin.bottom);\r\n    ctx.stroke();\r\n    ctx.fillStyle = this.graphWindowColor;\r\n    ctx.fillRect(margin.left, margin.top, canvas.width - margin.left - margin.right, canvas.height - margin.top - margin.bottom);\r\n  }\r\n\r\n  private drawTitleBar(ctx: CanvasRenderingContext2D): void {\r\n    // draw bar\r\n    ctx.fillStyle = this.titleBarColor;\r\n    ctx.fillRect(0, 0, this.canvas.width, 24);\r\n    ctx.fillStyle = \"black\";\r\n    ctx.lineWidth = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 24);\r\n    ctx.lineTo(this.canvas.width, this.titleBarHeight);\r\n    ctx.stroke();\r\n    this.drawButton(ctx, this.closeButton);\r\n    this.drawButton(ctx, this.clearButton);\r\n  }\r\n\r\n  private drawButton(ctx: CanvasRenderingContext2D, button: Rectangle): void {\r\n    ctx.beginPath();\r\n    ctx.rect(button.x, button.y, button.width, button.height);\r\n    ctx.stroke();\r\n    ctx.lineWidth = 0.5;\r\n    if (button == this.closeButton) {\r\n      ctx.moveTo(button.x + 2, button.y + 2);\r\n      ctx.lineTo(button.x + button.width - 2, button.y + button.height - 2);\r\n      ctx.moveTo(button.x + button.width - 2, button.y + 2);\r\n      ctx.lineTo(button.x + 2, button.y + button.height - 2);\r\n    } else if (button == this.clearButton) {\r\n      ctx.moveTo(button.x + 2, button.getCenterY());\r\n      ctx.lineTo(button.x + button.width - 2, button.getCenterY());\r\n    }\r\n    ctx.stroke();\r\n  }\r\n\r\n  private drawToolTips(ctx: CanvasRenderingContext2D): void {\r\n    switch (this.selectedButton) {\r\n      case this.closeButton:\r\n        ctx.drawTooltip(this.closeButton.getCenterX() - 20, this.closeButton.getCenterY() + 20, 20, 8, 10, \"Close\", true);\r\n        break;\r\n      case this.clearButton:\r\n        ctx.drawTooltip(this.clearButton.getCenterX() - 20, this.clearButton.getCenterY() + 20, 20, 8, 10, \"Clear\", true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private onMouseMove = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.x;\r\n    let y = e.clientY - rect.y;\r\n    let ctx = this.canvas.getContext('2d');\r\n    this.selectedButton = null;\r\n    if (this.closeButton.contains(x, y)) {\r\n      this.canvas.style.cursor = \"pointer\";\r\n      this.selectedButton = this.closeButton;\r\n    } else if (this.clearButton.contains(x, y)) {\r\n      this.canvas.style.cursor = \"pointer\";\r\n      this.selectedButton = this.clearButton;\r\n    } else if (this.handle.contains(x, y)) {\r\n      this.canvas.style.cursor = \"move\";\r\n    } else {\r\n      this.canvas.style.cursor = \"default\";\r\n    }\r\n    this.draw();\r\n  };\r\n\r\n  private onMouseLeave = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    this.draw();\r\n  };\r\n\r\n  private onTouchMove = (e: TouchEvent): void => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  private onMouseClick = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.x;\r\n    let y = e.clientY - rect.y;\r\n    if (this.closeButton.contains(x, y)) {\r\n      this.setVisible(false);\r\n      localStorage.setItem(\"Visible: \" + this.getUid(), \"false\");\r\n    } else if (this.clearButton.contains(x, y)) {\r\n      this.sensor.data.length = 0;\r\n    } else {\r\n      this.bringForward();\r\n    }\r\n  };\r\n\r\n  private onMouseDoubleClick = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  private openContextMenu = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let menu = document.getElementById(\"linechart-context-menu\") as HTMLMenuElement;\r\n    menu.style.left = e.clientX + \"px\";\r\n    menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n    menu.classList.add(\"show-menu\");\r\n  };\r\n\r\n  public bringForward(): void {\r\n    this.canvas.style.zIndex = (parseInt(this.canvas.style.zIndex) + 2).toString();\r\n  }\r\n\r\n  public getX(): number {\r\n    return this.canvas.offsetLeft;\r\n  }\r\n\r\n  public setX(x: number): void {\r\n    this.canvas.style.left = x + \"px\";\r\n  }\r\n\r\n  public getY(): number {\r\n    return this.canvas.offsetTop;\r\n  }\r\n\r\n  public setY(y: number): void {\r\n    this.canvas.style.top = y + \"px\";\r\n  }\r\n\r\n  public getWidth(): number {\r\n    return this.canvas.width;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  // detect if (x, y) is inside this chart\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.canvas.offsetLeft && x < this.canvas.offsetLeft + this.canvas.width && y > this.canvas.offsetTop && y < this.canvas.offsetTop + this.canvas.height;\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Movable} from \"./Movable\";\r\nimport {Workbench} from \"./Workbench\";\r\nimport {RaspberryPi} from \"./components/RaspberryPi\";\r\nimport {RainbowHat} from \"./components/RainbowHat\";\r\nimport {LineChart} from \"./tools/LineChart\";\r\nimport {ColorPicker} from \"./tools/ColorPicker\";\r\n\r\ndeclare var firebase;\r\n\r\nexport class System {\r\n\r\n  static database;\r\n\r\n  workbench: Workbench;\r\n  raspberryPi: RaspberryPi;\r\n  rainbowHat: RainbowHat;\r\n  temperatureGraph: LineChart;\r\n  pressureGraph: LineChart;\r\n  playground: HTMLElement;\r\n  colorPicker: ColorPicker;\r\n\r\n  private selectedMovable: Movable;\r\n  private mouseDownRelativeX: number;\r\n  private mouseDownRelativeY: number;\r\n\r\n  constructor() {\r\n\r\n    if (!System.database) {\r\n      let config = {\r\n        apiKey: \"${process.env.FIREBASE_API_KEY}\",\r\n        authDomain: \"${process.env.AUTH_DOMAIN}\",\r\n        projectId: \"${process.env.PROJECT_ID}\",\r\n        storageBucket: \"${process.env.STORAGE_BUCKET}\",\r\n        messagingSenderId: \"${process.env.MESSAGING_SENDER_ID}\",\r\n        databaseURL: \"https://raspberry-pi-java.firebaseio.com\"\r\n      };\r\n      firebase.initializeApp(config);\r\n      // Get a reference to the database service\r\n      System.database = firebase.database();\r\n    }\r\n\r\n    this.workbench = new Workbench(\"workbench\");\r\n    this.raspberryPi = new RaspberryPi(\"raspberry-pi\");\r\n    this.rainbowHat = new RainbowHat(\"rainbow-hat\");\r\n    this.temperatureGraph = new LineChart(\"temperature-linechart\", this.rainbowHat.temperatureSensor);\r\n    this.pressureGraph = new LineChart(\"pressure-linechart\", this.rainbowHat.barometricPressureSensor);\r\n\r\n    this.playground = document.getElementById(\"digital-twins-playground\");\r\n    this.playground.addEventListener(\"mousedown\", this.mouseDown, false);\r\n    this.playground.addEventListener(\"mouseup\", this.mouseUp, false);\r\n    this.playground.addEventListener(\"mousemove\", this.mouseMove, false);\r\n    document.addEventListener(\"mouseleave\", this.mouseLeave, false);\r\n\r\n  }\r\n\r\n  draw(): void {\r\n    this.workbench.draw();\r\n    this.raspberryPi.draw();\r\n    this.rainbowHat.draw();\r\n  }\r\n\r\n  private mouseDown = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    let rect = this.playground.getBoundingClientRect();\r\n    let x = e.clientX - rect.x;\r\n    let y = e.clientY - rect.y;\r\n    if (this.rainbowHat.whichHandle(x - this.rainbowHat.getX(), y - this.rainbowHat.getY()) >= 0) {\r\n      this.selectedMovable = this.rainbowHat;\r\n    } else if (this.temperatureGraph.isVisible() && this.temperatureGraph.onHandle(x - this.temperatureGraph.getX(), y - this.temperatureGraph.getY())) {\r\n      this.selectedMovable = this.temperatureGraph;\r\n    } else if (this.pressureGraph.isVisible() && this.pressureGraph.onHandle(x - this.pressureGraph.getX(), y - this.pressureGraph.getY())) {\r\n      this.selectedMovable = this.pressureGraph;\r\n    } else if (this.raspberryPi.whichHandle(x - this.raspberryPi.getX(), y - this.raspberryPi.getY()) >= 0) {\r\n      this.selectedMovable = this.raspberryPi;\r\n    } else {\r\n      this.selectedMovable = null;\r\n    }\r\n    if (this.selectedMovable != null) {\r\n      this.mouseDownRelativeX = e.clientX - this.selectedMovable.getX();\r\n      this.mouseDownRelativeY = e.clientY - this.selectedMovable.getY();\r\n    }\r\n  };\r\n\r\n  private mouseUp = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    this.selectedMovable = null;\r\n    // close all menus upon mouse left click\r\n    let menu = document.getElementById(\"workbench-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    menu = document.getElementById(\"raspberry-pi-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    menu = document.getElementById(\"rainbow-hat-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    menu = document.getElementById(\"linechart-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    menu = document.getElementById(\"colorpicker-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n  };\r\n\r\n  private mouseLeave = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    this.selectedMovable = null;\r\n  };\r\n\r\n  private mouseMove = (e: MouseEvent): void => {\r\n    e.preventDefault();\r\n    if (this.selectedMovable != null) {\r\n      this.moveTo(e.clientX, e.clientY, this.selectedMovable);\r\n      this.storeLocation(this.selectedMovable);\r\n    }\r\n  };\r\n\r\n  private storeLocation(m: Movable): void {\r\n    localStorage.setItem(\"X: \" + m.getUid(), m.getX().toString());\r\n    localStorage.setItem(\"Y: \" + m.getUid(), m.getY().toString());\r\n    if (m instanceof RainbowHat) {\r\n      if (m.raspberryPi != null) {\r\n        localStorage.setItem(\"X: \" + m.raspberryPi.getUid(), m.raspberryPi.getX().toString());\r\n        localStorage.setItem(\"Y: \" + m.raspberryPi.getUid(), m.raspberryPi.getY().toString());\r\n      }\r\n    } else if (m instanceof RaspberryPi) {\r\n      if (m.hat != null) {\r\n        localStorage.setItem(\"X: \" + m.hat.getUid(), m.hat.getX().toString());\r\n        localStorage.setItem(\"Y: \" + m.hat.getUid(), m.hat.getY().toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveTo(x: number, y: number, m: Movable): void {\r\n    let dx = x - this.mouseDownRelativeX;\r\n    let dy = y - this.mouseDownRelativeY;\r\n    let xmax = this.workbench.getX() + this.workbench.getWidth() - m.getWidth();\r\n    if (dx < this.workbench.getX()) {\r\n      dx = this.workbench.getX();\r\n    } else if (dx > xmax) {\r\n      dx = xmax;\r\n    }\r\n    let ymax = this.workbench.getY() + this.workbench.getHeight() - m.getHeight();\r\n    if (dy < this.workbench.getY()) {\r\n      dy = this.workbench.getY();\r\n    } else if (dy > ymax) {\r\n      dy = ymax;\r\n    }\r\n    m.setX(dx);\r\n    m.setY(dy);\r\n    if (m instanceof RainbowHat) {\r\n      if (m.raspberryPi != null) {\r\n        m.raspberryPi.setX(m.getX());\r\n        m.raspberryPi.setY(m.getY());\r\n      }\r\n    } else if (m instanceof RaspberryPi) {\r\n      if (m.hat != null) {\r\n        m.hat.setX(m.getX());\r\n        m.hat.setY(m.getY());\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\n// @ts-ignore\r\nimport raspberryPiImage from \"./img/raspberry-pi.png\";\r\n// @ts-ignore\r\nimport rainbowHatImage from \"./img/rainbow-hat.png\";\r\n// @ts-ignore\r\nimport senseHatImage from \"./img/sense-hat.png\";\r\n// @ts-ignore\r\nimport unicornHatImage from \"./img/unicorn-hat.png\";\r\n// @ts-ignore\r\nimport crickitHatImage from \"./img/crickit-hat.png\";\r\n// @ts-ignore\r\nimport capacitiveTouchHatImage from \"./img/capacitive-touch-hat.png\";\r\n// @ts-ignore\r\nimport panTiltHatImage from \"./img/pan-tilt-hat.png\";\r\n// @ts-ignore\r\nimport fullBreadboardImage from \"./img/full-breadboard.png\";\r\n// @ts-ignore\r\nimport halfBreadboardImage from \"./img/half-breadboard.png\";\r\n// @ts-ignore\r\nimport redLedLightImage from \"./img/red-led-light.png\";\r\n// @ts-ignore\r\nimport greenLedLightImage from \"./img/green-led-light.png\";\r\n// @ts-ignore\r\nimport blueLedLightImage from \"./img/blue-led-light.png\";\r\n// @ts-ignore\r\nimport tricolorLedLightImage from \"./img/tricolor-led-light.png\";\r\n// @ts-ignore\r\nimport momentaryButtonImage from \"./img/momentary-button.png\";\r\n// @ts-ignore\r\nimport toggleSwitchImage from \"./img/toggle-switch.png\";\r\n// @ts-ignore\r\nimport piezoBuzzerImage from \"./img/piezo-buzzer.png\";\r\n\r\nexport class ComponentsPanel {\r\n\r\n  getUi(): string {\r\n    return `<h2 style=\"text-align: center; vertical-align: top; margin-top: 0;\">\r\n                <span style=\"font-size: 1.2em; color: teal; vertical-align: middle;\"><i class=\"fas fa-cubes\"></i></span> Components</h2>\r\n            <hr>\r\n            <div id=\"components-scroller\" style=\"overflow-y: auto; height: 360px;\">\r\n              <h3 style=\"text-align: left\"><span style=\"font-size: 1.2em; color: teal; vertical-align: middle\"><i class=\"fas fa-cube\"></i></span> Microcontrollers</h3>\r\n              <div class=\"row\" style=\"margin-right: 10px; background-color: lightskyblue; border: 1px solid #b81900; border-radius: 4px\">\r\n                <div class=\"column\">\r\n                  <img src=\"${raspberryPiImage}\" draggable=\"true\" id=\"raspberry-pi-image\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Raspberry Pi\">\r\n                </div>\r\n              </div>\r\n              <div class=\"vertical-divider\"></div>\r\n              <h3 style=\"text-align: left\"><span style=\"font-size: 1.2em; color: teal; vertical-align: middle\"><i class=\"fas fa-cube\"></i></span> HATs</h3>\r\n              <div class=\"row\" style=\"margin-right: 10px;  background-color: lightblue; border: 1px solid #b81900; border-radius: 4px\">\r\n                <div class=\"column\">\r\n                  <img src=\"${rainbowHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Rainbow HAT\">\r\n                  <img src=\"${senseHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Sense HAT\">\r\n                  <img src=\"${capacitiveTouchHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Capacitive Touch HAT\">\r\n               </div>\r\n                <div class=\"column\">\r\n                  <img src=\"${unicornHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Unicorn HAT\">\r\n                  <img src=\"${crickitHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Crickit HAT\">\r\n                  <img src=\"${panTiltHatImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Pan-Tilt HAT\">\r\n               </div>\r\n              </div>\r\n              <div class=\"vertical-divider\"></div>\r\n              <h3 style=\"text-align: left\"><span style=\"font-size: 1.2em; color: teal; vertical-align: middle\"><i class=\"fas fa-cube\"></i></span> Others</h3>\r\n              <div class=\"row\" style=\"margin-right: 10px;  background-color: lightyellow; border: 1px solid #b81900; border-radius: 4px\">\r\n                <div class=\"column\">\r\n                  <img src=\"${fullBreadboardImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Full Breadboard\">\r\n                  <img src=\"${redLedLightImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Red LED Light\">\r\n                  <img src=\"${greenLedLightImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Green LED Light\">\r\n                  <img src=\"${blueLedLightImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Blue LED Light\">\r\n                 <img src=\"${tricolorLedLightImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Tricolor LED Light\">\r\n                </div>\r\n                <div class=\"column\">\r\n                  <img src=\"${halfBreadboardImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer; box-shadow: 5px 5px 5px gray;\" title=\"Half Breadboard\">\r\n                  <img src=\"${momentaryButtonImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Momentary Button\">\r\n                  <img src=\"${toggleSwitchImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Toggle Switch\">\r\n                  <img src=\"${piezoBuzzerImage}\" draggable=\"true\" style=\"width:100%; cursor: pointer;\" title=\"Piezo Buzzer\">\r\n                </div>\r\n              </div>\r\n            </div>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {system} from \"./Main\";\r\n\r\nexport class RainbowHatContextMenu {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getUi(): string {\r\n    return `<menu id=\"rainbow-hat-context-menu\" class=\"menu\" style=\"width: 120px; z-index: 10000\">\r\n              <li class=\"menu-item\" id=\"rainbow-hat-attach-menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\" id=\"rainbow-hat-attach-button\"><i class=\"fas fa-angle-double-down\"></i><span class=\"menu-text\">Attach</span></button>\r\n              </li>\r\n              <li class=\"menu-item\" id=\"rainbow-hat-detach-menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\" id=\"rainbow-hat-detach-button\"><i class=\"fas fa-angle-double-up\"></i><span class=\"menu-text\">Detach</span></button>\r\n              </li>\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-code\"></i><span class=\"menu-text\">Code</span></button>\r\n              </li>\r\n            </menu>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n  }\r\n\r\n  addListeners(): void {\r\n    let attachButton = document.getElementById(\"rainbow-hat-attach-button\");\r\n    attachButton.addEventListener(\"click\", this.attachButtonClick.bind(this), false);\r\n    let detachButton = document.getElementById(\"rainbow-hat-detach-button\");\r\n    detachButton.addEventListener(\"click\", this.detachButtonClick.bind(this), false);\r\n  }\r\n\r\n  private attachButtonClick(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let menu = document.getElementById(\"rainbow-hat-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    system.rainbowHat.attach(system.raspberryPi);\r\n  }\r\n\r\n  private detachButtonClick(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    console.log(\"detach\");\r\n    let menu = document.getElementById(\"rainbow-hat-context-menu\") as HTMLMenuElement;\r\n    menu.classList.remove(\"show-menu\");\r\n    system.rainbowHat.attach(null);\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class WorkbenchContextMenu {\r\n\r\n  getUi(): string {\r\n    return `<menu id=\"workbench-context-menu\" class=\"menu\" style=\"width: 120px; z-index: 10000\">\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-folder-open\"></i><span class=\"menu-text\">Open</span></button>\r\n              </li>\r\n              <li class=\"menu-item disabled\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-download\"></i><span class=\"menu-text\">Save</span></button>\r\n              </li>\r\n              <li class=\"menu-separator\"></li>\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-trash\"></i><span class=\"menu-text\">Delete</span></button>\r\n              </li>\r\n              <li class=\"menu-item submenu\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-file-import\"></i><span class=\"menu-text\">Import</span></button>\r\n\r\n                <menu class=\"menu\" style=\"width: 160px;\">\r\n                  <li class=\"menu-item\">\r\n                    <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Breadboard</span></button>\r\n                  </li>\r\n\r\n                  <li class=\"menu-item submenu\">\r\n                    <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Sensors</span></button>\r\n                    <menu class=\"menu\" style=\"width: 120px;\">\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">BME280</span></button>\r\n                      </li>\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">TSL2561</span></button>\r\n                      </li>\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">HCSR04</span></button>\r\n                      </li>\r\n                    </menu>\r\n                  </li>\r\n\r\n                  <li class=\"menu-item submenu\">\r\n                    <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Actuators</span></button>\r\n                    <menu class=\"menu\" style=\"width: 180px;\">\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Buzzer</span></button>\r\n                      </li>\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Servo Motor</span></button>\r\n                      </li>\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">LED Light</span></button>\r\n                      </li>\r\n                      <li class=\"menu-item\">\r\n                        <button type=\"button\" class=\"menu-btn\"><span class=\"menu-text\">Multicolor LED Light</span></button>\r\n                      </li>\r\n                    </menu>\r\n                  </li>\r\n\r\n                </menu>\r\n              </li>\r\n            </menu>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class LineChartContextMenu {\r\n\r\n  getUi(): string {\r\n    return `<menu id=\"linechart-context-menu\" class=\"menu\" style=\"z-index: 10000\">\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-palette\"></i><span class=\"menu-text\">Colors</span></button>\r\n              </li>\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-cog\"></i><span class=\"menu-text\">Options</span></button>\r\n              </li>\r\n            </menu>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class RaspberryPiContextMenu {\r\n\r\n  getUi(): string {\r\n    return `<menu id=\"raspberry-pi-context-menu\" class=\"menu\" style=\"width: 120px; z-index: 10000\">\r\n              <li class=\"menu-item\">\r\n                <button type=\"button\" class=\"menu-btn\"><i class=\"fas fa-cogs\"></i><span class=\"menu-text\">Settings</span></button>\r\n              </li>\r\n            </menu>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\nimport {system} from \"./Main\";\r\n\r\nexport class ColorPickerContextMenu {\r\n\r\n  getUi(): string {\r\n    return `<menu id=\"colorpicker-context-menu\" class=\"menu\" style=\"width: 338px; z-index: 10000\">\r\n              <li class=\"menu-item\">\r\n                <div id=\"colorpicker-title\" style=\"text-align: center; padding: 4px; font-family: inherit; font-size: 14px;\"></div>\r\n                <div id=\"colorpicker\" style=\"cursor: crosshair; margin: 1px 1px 1px 1px\">\r\n                  <canvas id=\"color-block\" height=\"300\" width=\"300\"></canvas>\r\n                  <canvas id=\"color-strip\" height=\"300\" width=\"30\"></canvas>\r\n                </div>\r\n                <div style=\"display: table; margin: auto; padding: 5px 5px 5px 5px;\">\r\n                  <input type=\"text\" readonly id=\"colorpicker-hex-code\" value=\"#FFFFFF\" style=\"width: 60px; height: 20px; border: 1px solid black; vertical-align: middle; text-align: center; font: 12px Verdana;\">\r\n                  <div class=\"horizontal-divider\"></div>\r\n                  <div id=\"colorpicker-label\" style=\"vertical-align: middle; width: 20px; height: 20px; border: 2px solid black; display: inline-block;\"></div>\r\n                  <div class=\"horizontal-divider\"></div>\r\n                  <button id=\"colorpicker-cancel-button\" style=\"font: 12px Verdana\">Cancel</button>\r\n                  <div class=\"horizontal-divider\"></div>\r\n                  <button id=\"colorpicker-ok-button\" style=\"font: 12px Verdana\">OK</button>\r\n                </div>\r\n              </li>\r\n            </menu>`;\r\n  }\r\n\r\n  render(selectorId: string): void {\r\n    let element = document.getElementById(selectorId);\r\n    element.innerHTML = this.getUi();\r\n    let cancelButton = document.getElementById(\"colorpicker-cancel-button\") as HTMLButtonElement;\r\n    cancelButton.onclick = function () {\r\n      let menu = document.getElementById(\"colorpicker-context-menu\") as HTMLMenuElement;\r\n      menu.classList.remove(\"show-menu\");\r\n    };\r\n    let okButton = document.getElementById(\"colorpicker-ok-button\") as HTMLButtonElement;\r\n    okButton.onclick = function () {\r\n      system.rainbowHat.setSelectedRgbLedLightColor(system.colorPicker.getSelectedColor());\r\n      let menu = document.getElementById(\"colorpicker-context-menu\") as HTMLMenuElement;\r\n      menu.classList.remove(\"show-menu\");\r\n    };\r\n  }\r\n\r\n}\r\n","/*\n * @author Charles Xie\n */\n\nexport class Block {\n\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  name: string;\n\n  private radius: number = 10;\n  private margin: number = 30;\n\n  constructor(x: number, y: number, width: number, height: number, name: string) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.name = name;\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n\n    ctx.fillStyle = \"lightgray\";\n    ctx.fillRoundedRect(this.x, this.y, this.width, this.height, this.radius);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"black\";\n    ctx.drawRoundedRect(this.x, this.y, this.width, this.height, this.radius);\n\n    ctx.fillStyle = \"white\";\n    ctx.beginPath();\n    ctx.rect(this.x + this.margin, this.y + this.margin, this.width - 2 * this.margin, this.height - 2 * this.margin);\n    ctx.closePath();\n    ctx.fill();\n    ctx.strokeStyle = \"black\";\n    ctx.stroke();\n\n    ctx.fillStyle = \"black\";\n    ctx.font = \"20px Arial\";\n    let textMetrics = ctx.measureText(this.name);\n    ctx.fillText(this.name, this.x + this.width / 2 - textMetrics.width / 2, this.y + this.height / 2 + 8);\n\n    let r = 8;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y + this.height / 3, r, 0.5 * Math.PI, 1.5 * Math.PI, false);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(this.x, this.y + this.height * 2 / 3, r, 0.5 * Math.PI, 1.5 * Math.PI, false);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(this.x + this.width, this.y + this.height / 2, r, 0.5 * Math.PI, 1.5 * Math.PI, true);\n    ctx.stroke();\n\n  }\n\n\n}\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nexport class Point {\r\n\r\n  public x: number;\r\n  public y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"(\" + this.x + \", \" + this.y + \")\";\r\n  }\r\n\r\n}\r\n","/*\r\n * @author Charles Xie\r\n */\r\n\r\nimport {Block} from \"./Block\";\r\nimport {Point} from \"../math/Point\";\r\n\r\nexport class Codespace {\r\n\r\n  private blocks: Block[] = [];\r\n\r\n  readonly canvas: HTMLCanvasElement;\r\n\r\n  constructor(canvasId: string) {\r\n    this.canvas = document.getElementById(canvasId) as HTMLCanvasElement;\r\n    this.canvas.addEventListener(\"mousedown\", this.mouseDown.bind(this), false);\r\n    this.canvas.addEventListener(\"mouseup\", this.mouseUp.bind(this), false);\r\n    this.canvas.addEventListener(\"mousemove\", this.mouseMove.bind(this), false);\r\n    this.canvas.addEventListener('contextmenu', this.openContextMenu.bind(this), false);\r\n    this.blocks.push(new Block(20, 20, 160, 100, \"X + Y\"));\r\n    this.blocks.push(new Block(220, 220, 160, 100, \"X * Y\"));\r\n  }\r\n\r\n  public draw(): void {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    for (let i = 0; i < this.blocks.length; i++) {\r\n      this.blocks[i].draw(ctx);\r\n    }\r\n\r\n    let points = [];\r\n    points.push(new Point(188, 70));\r\n    points.push(new Point(240, 140));\r\n    points.push(new Point(20, 200));\r\n    points.push(new Point(212, 288));\r\n    this.drawSpline(points, ctx);\r\n\r\n  }\r\n\r\n  private drawSpline(points: Point[], ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(points[0].x, points[0].y);\r\n    let i;\r\n    for (i = 1; i < points.length - 2; i++) {\r\n      let xc = (points[i].x + points[i + 1].x) / 2;\r\n      let yc = (points[i].y + points[i + 1].y) / 2;\r\n      ctx.quadraticCurveTo(points[i].x, points[i].y, xc, yc);\r\n    }\r\n    ctx.quadraticCurveTo(points[i].x, points[i].y, points[i + 1].x, points[i + 1].y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  // detect if (x, y) is inside this workbench\r\n  public contains(x: number, y: number): boolean {\r\n    return x > this.canvas.offsetLeft && x < this.canvas.offsetLeft + this.canvas.width && y > this.canvas.offsetTop && y < this.canvas.offsetTop + this.canvas.height;\r\n  }\r\n\r\n  public getX(): number {\r\n    return 10;\r\n  }\r\n\r\n  public getY(): number {\r\n    return 10;\r\n  }\r\n\r\n  public getWidth(): number {\r\n    return this.canvas.width;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  private mouseDown(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n  }\r\n\r\n  private mouseUp(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  private mouseMove(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let dx = e.clientX - rect.x;\r\n    let dy = e.clientY - rect.y;\r\n    let context = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  private openContextMenu(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    let menu = document.getElementById(\"workbench-context-menu\") as HTMLMenuElement;\r\n    menu.style.left = e.clientX + \"px\";\r\n    menu.style.top = (e.clientY - document.getElementById(\"tabs\").getBoundingClientRect().bottom) + \"px\";\r\n    menu.classList.add(\"show-menu\");\r\n  }\r\n\r\n}\r\n","/*\n * @author Charles Xie\n */\nimport {Codespace} from \"./Codespace\";\n\nexport class Code {\n\n  codespace: Codespace;\n\n  constructor() {\n    this.codespace = new Codespace(\"codespace\");\n  }\n\n  draw(): void {\n    this.codespace.draw();\n  }\n\n}\n","/*\n * @author Charles Xie\n */\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport * as Constants from \"./Constants\";\nimport {User} from \"./User\";\nimport {System} from \"./System\";\nimport {Movable} from \"./Movable\";\nimport {ComponentsPanel} from \"./ComponentsPanel\";\nimport {RainbowHatContextMenu} from \"./RainbowHatContextMenu\";\nimport {WorkbenchContextMenu} from \"./WorkbenchContextMenu\";\nimport {LineChartContextMenu} from \"./LineChartContextMenu\";\nimport {RaspberryPiContextMenu} from \"./RaspberryPiContextMenu\";\nimport {ColorPickerContextMenu} from \"./ColorPickerContextMenu\";\nimport {Code} from \"./code/Code\";\nimport {LineChart} from \"./tools/LineChart\";\n\ndeclare global {\n  interface CanvasRenderingContext2D {\n    drawTooltip(x, y, h, r, margin, text, centered);\n\n    drawRoundedRect(x, y, w, h, r);\n\n    fillRoundedRect(x, y, w, h, r);\n  }\n\n  interface String {\n    startsWith(s);\n  }\n}\n\nexport let system = new System();\nexport let code = new Code();\nexport let user = new User(\"Charles\", null, \"Xie\");\n\nlet social = `<span style=\"font-size: 2em; vertical-align: middle; cursor: pointer;\"><i class=\"fab fa-facebook-square\"></i></span>\n              <span style=\"font-size: 2em; vertical-align: middle; cursor: pointer;\"><i class=\"fab fa-weixin\"></i></span>\n              <span style=\"font-size: 2em; vertical-align: middle; cursor: pointer;\"><i class=\"fab fa-twitter\"></i></span>\n              <span style=\"font-size: 2em; vertical-align: middle; cursor: pointer;\"><i class=\"fab fa-weibo\"></i></span>\n              <span style=\"font-size: 2em; vertical-align: middle; cursor: pointer;\"><i class=\"fab fa-youtube\"></i></span>`;\n\nwindow.onload = function () {\n\n  let signinLabel = document.getElementById(\"sign-in-label\") as HTMLElement;\n  signinLabel.innerHTML = \"Hello, \" + user.firstName;\n  let nameLabel = document.getElementById(\"name-label\") as HTMLElement;\n  nameLabel.innerHTML = Constants.Software.name;\n  let versionLabel = document.getElementById(\"version-label\") as HTMLElement;\n  versionLabel.innerHTML = Constants.Software.version;\n  let creditLabel = document.getElementById('credit') as HTMLElement;\n  creditLabel.innerHTML = social + \"<div class='horizontal-divider'></div>\" + Constants.Software.name + \" \" + Constants.Software.version + \", \" + user.fullName + \" , &copy; \" + new Date().getFullYear();\n\n  let digitalTwinsTabButton = document.getElementById(\"digital-twins-tab-button\") as HTMLButtonElement;\n  digitalTwinsTabButton.addEventListener(\"click\", function (event) {\n    selectTab(digitalTwinsTabButton, \"digital-twins-playground\");\n  });\n  let diagramTabButton = document.getElementById(\"diagram-tab-button\") as HTMLButtonElement;\n  diagramTabButton.addEventListener(\"click\", function (event) {\n    selectTab(diagramTabButton, \"diagram-playground\");\n  });\n  let codeTabButton = document.getElementById(\"code-tab-button\") as HTMLButtonElement;\n  codeTabButton.addEventListener(\"click\", function (event) {\n    selectTab(codeTabButton, \"code-playground\");\n  });\n\n  let workbenchContextMenu = new WorkbenchContextMenu();\n  workbenchContextMenu.render(\"workbench-context-menu-placeholder\");\n  let raspberryPiContextMenu = new RaspberryPiContextMenu();\n  raspberryPiContextMenu.render(\"raspberry-pi-context-menu-placeholder\");\n  let rainbowHatContextMenu = new RainbowHatContextMenu();\n  rainbowHatContextMenu.render(\"rainbow-hat-context-menu-placeholder\");\n  rainbowHatContextMenu.addListeners();\n  let lineChartContextMenu = new LineChartContextMenu();\n  lineChartContextMenu.render(\"linechart-context-menu-placeholder\");\n  let colorPickerContextMenu = new ColorPickerContextMenu();\n  colorPickerContextMenu.render(\"colorpicker-context-menu-placeholder\");\n  let componentsPanel = new ComponentsPanel();\n  componentsPanel.render(\"components-panel\");\n\n  // read locally stored properties\n  restoreLocation(system.raspberryPi);\n  restoreLocation(system.rainbowHat);\n  restoreLocation(system.temperatureGraph);\n  restoreLocation(system.pressureGraph);\n  restoreVisibility(system.temperatureGraph);\n  restoreVisibility(system.pressureGraph);\n  let x: string = localStorage.getItem(\"Attached: \" + system.rainbowHat.getUid());\n  if (x != null) {\n    let i = parseInt(x);\n    if (i >= 0) {\n      system.rainbowHat.attach(system.raspberryPi);\n    }\n  }\n\n  resize();\n  draw();\n\n};\n\nfunction selectTab(button: HTMLButtonElement, tabId: string) {\n  // Get all elements with class=\"tabcontent\" and hide them\n  let tabcontent = document.getElementsByClassName(\"tabcontent\") as HTMLCollectionOf<HTMLElement>;\n  for (let i = 0; i < tabcontent.length; i++) {\n    (<HTMLElement>tabcontent[i]).style.display = \"none\";\n  }\n  // Get all elements with class=\"tablinks\" and remove the class \"active\"\n  let tablinks = document.getElementsByClassName(\"tablinks\") as HTMLCollectionOf<HTMLElement>;\n  for (let i = 0; i < tablinks.length; i++) {\n    tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n  }\n  // Show the current tab, and add an \"active\" class to the button that opened the tab\n  document.getElementById(tabId).style.display = \"block\";\n  button.className += \" active\";\n}\n\nfunction restoreVisibility(g: LineChart) {\n  let x: string = localStorage.getItem(\"Visible: \" + g.getUid());\n  if (x != null) {\n    g.setVisible(\"true\" == x);\n    g.draw();\n  }\n}\n\nfunction restoreLocation(m: Movable) {\n  let x: string = localStorage.getItem(\"X: \" + m.getUid());\n  if (x != null) {\n    m.setX(parseInt(x));\n  }\n  let y: string = localStorage.getItem(\"Y: \" + m.getUid());\n  if (y != null) {\n    m.setY(parseInt(y));\n  }\n}\n\nwindow.onresize = function () {\n  resize();\n  draw();\n};\n\nfunction resize() {\n  let workbenchRect = system.workbench.canvas.getBoundingClientRect() as DOMRect;\n  system.workbench.canvas.width = window.innerWidth - 2 * workbenchRect.left - 4;\n  system.workbench.canvas.height = window.innerHeight - workbenchRect.top - 50;\n  let codespaceRect = code.codespace.canvas.getBoundingClientRect() as DOMRect;\n  code.codespace.canvas.width = window.innerWidth - 2 * workbenchRect.left - 4;\n  code.codespace.canvas.height = window.innerHeight - workbenchRect.top - 50;\n  let componentsScroller = document.getElementById(\"components-scroller\") as HTMLDivElement;\n  componentsScroller.style.height = system.workbench.canvas.height * 0.8 + \"px\";\n}\n\nfunction draw() {\n  system.draw();\n  code.draw();\n}\n"]}